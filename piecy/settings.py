"""
Django settings for piecy project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from django.conf import locale
from dotenv import load_dotenv

from django.utils.translation import gettext_lazy as _



BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=BASE_DIR/'.env')

SECRET_KEY  = os.getenv('SECRET_KEY')
DEBUG       = os.getenv('DEBUG') == 'True'

DB_ENGINE   = os.getenv('DB_ENGINE')
DB_NAME     = os.getenv('DB_NAME')
DB_USER     = os.getenv('DB_USER')
DB_PASSWORD = os.getenv('DB_PASSWORD')
DB_HOST     = os.getenv('DB_HOST')
DB_PORT     = os.getenv('DB_PORT')

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')
SECRET_KEY  = os.getenv('SECRET_KEY')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'accs',
    'base',
    'back',

    'allauth',
    'allauth.account',
    # 'allauth.socialaccount',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

SITE_ID = 1
DEFAULT_DOMAIN  = "mode-777.com"

ROOT_URLCONF = 'piecy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'piecy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     "default": {
#         "ENGINE":   DB_ENGINE,
#         "HOST":     DB_HOST,
#         "PORT":     DB_PORT,
#         "NAME":     DB_NAME,
#         "USER":     DB_USER,
#         "PASSWORD": DB_PASSWORD,
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


LANGUAGES = [
    ("fr", _("French")),
    ("ar", _("Arabic")),
    ("en", _("English")),
    # ("zg", _("Amazigh")),
    # ("es", _("Spanish")),
    # ("de", _("German")),
    ]
    
LOCALE_PATHS = [BASE_DIR / "locale", ]


STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",  # e.g., your_project/static/
]

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "accs.Utilisateur"

AUTHENTICATION_BACKENDS = [
    'allauth.account.auth_backends.AuthenticationBackend',
    "accs.authentication.EmailOrUsernameModelBackend",  # custom backend
    "django.contrib.auth.backends.ModelBackend",            # default fallback
]


# Email backend (for testing use console)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# EMAIL_BACKEND       = os.getenv('EMAIL_BACKEND')
# EMAIL_HOST          = os.getenv('EMAIL_HOST')
# EMAIL_PORT          = os.getenv('EMAIL_PORT')
# EMAIL_USE_TLS       = os.getenv('EMAIL_USE_TLS') == 'True'
# EMAIL_HOST_USER     = os.getenv('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
# DEFAULT_FROM_EMAIL  = os.getenv('DEFAULT_FROM_EMAIL')


# Django_allauth parameters
LOGIN_URL = 'account_login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = LOGIN_URL
ACCOUNT_LOGIN_METHODS = {'username', 'email'}
ACCOUNT_CHANGE_EMAIL = False
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_EMAIL_SUBJECT_PREFIX = 'Mode - 777'
ACCOUNT_SIGNUP_FORM_HONEYPOT_FIELD = 'age'
ACCOUNT_USERNAME_BLACKLIST = ['admin', 'owner', 'wassim', 'm777', 'mode777', 'mode-777', 'emarches', 'root', 'insi', 'system']
ACCOUNT_USERNAME_MIN_LENGTH = 4
# ACCOUNT_USERNAME_VALIDATORS = 'base.validators.username_ASCII_validators'
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"

ACCOUNT_EMAIL_VERIFICATION_BY_CODE_ENABLED = True
ACCOUNT_EMAIL_VERIFICATION_BY_CODE_MAX_ATTEMPTS = 5
ACCOUNT_EMAIL_VERIFICATION_BY_CODE_TIMEOUT = 900
# ACCOUNT_EMAIL_NOTIFICATIONS = True